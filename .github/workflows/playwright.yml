name: 🎭 Playwright

on:
  deployment_status:
    types: [created, completed]

jobs:
  playwright:
    name: 🎭 Playwright
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      BASE_URL: ${{ github.event.deployment_status.target_url }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🧪 Copy test env vars
        run: cp apps/web/.env.example apps/web/.env

      - name: 🦷 Extract pnpm version from package.json
        id: extract_version
        run: echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | cut -d'@' -f2)" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🌐 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: 🧳 Cache Turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: 📥 Install dependencies
        run: pnpm install --prefer-offline --frozen-lockfile

      - name: 📥 Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps

      - name: 🎭 Run Playwright tests
        run: pnpm run test:e2e

      - name: 📊 Upload report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/playwright/playwright-report/
          retention-days: 30
